/*
Задание 3: По каждому клиенту: Общее количество и сумма заказов, минимальная и максимальная дата заказа
+ Доп.информация с Фамилией и Именем клиента, а так же название города
+ Сортировка по Убыванию относительно суммы заказа
*/
select 	c.id as clientid,
		concat(c.first_name, ' ', c.last_name) as client_name,
		c.city,
		count(o.order_id) order_qty,
		sum(o.order_ammount) order_sum,
		min(o.order_date) order_date_min,
		max(o.order_date) order_date_max
 from orders o
 join clients c
 on o.client_id  = c.id
group by clientid,
		 client_name,
		 city
order by order_sum desc;


-- Задание 5: Общее количество, сумма заказов и среднее значение заказа, по возрастным группам
-- в Порядке убывания по сумме заказов
SELECT
   CASE
       WHEN EXTRACT(YEAR FROM AGE(CURRENT_DATE, birth_date)) < 18 THEN 'menee 18'
       WHEN EXTRACT(YEAR FROM AGE(CURRENT_DATE, birth_date)) BETWEEN 18 AND 24 THEN '18 - 24'
       WHEN EXTRACT(YEAR FROM AGE(CURRENT_DATE, birth_date)) BETWEEN 25 AND 29 THEN '25 - 29'
       WHEN EXTRACT(YEAR FROM AGE(CURRENT_DATE, birth_date)) BETWEEN 30 AND 39 THEN '30 - 39'
		WHEN EXTRACT(YEAR FROM AGE(CURRENT_DATE, birth_date)) BETWEEN 40 AND 55 THEN '40 - 55'
       WHEN EXTRACT(YEAR FROM AGE(CURRENT_DATE, birth_date)) BETWEEN 56 AND 70 THEN '56 - 70'
       ELSE 'Pensioner'
   END AS age_group,
   count(o.order_id) order_qty,
	sum(o.order_ammount) order_sum,
	round(avg(o.order_ammount), 2) order_avg
from orders o
join clients c
 on o.client_id  = c.id
group by age_group
order by order_sum desc;




-- Задание 2: Найти клиентов, у которых общая сумма заказов превышает 10000, и вывести их имя, фамилию, email и сумму заказов.
-- + Сортировка по убыванию суммы заказа
select 	c.id as clientid,
		concat(c.first_name, ' ', c.last_name, ' [', c.email, ']') as client_info,
		sum(o.order_ammount) order_sum
 from orders o
 join clients c
 on o.client_id  = c.id
group by clientid,
		 client_info
having sum(o.order_ammount) > 10000
order by order_sum desc;

-----------------------------------------------------------------------------
-- GROUP BY + HAVING + CTE
-----------------------------------------------------------------------------
select  date_trunc('year', o.order_date) ,
		extract(year from (o.order_date))
from orders o
-- Задание 1: Найти клиентов, которые за 2024 год сделали заказы на сумму более 10,000.
-- Вывести имя, фамилию, город и сумму заказов.
with cte_orders_2024 as (
	select 	o.client_id ,
			sum(o.order_ammount) order_sum
	  from orders o
	where extract(year from (o.order_date)) = 2024
	group by o.client_id
	having sum(o.order_ammount) > 10000
)
select 	o.client_id,
		concat(c.first_name, ' ', c.last_name) as client_name,
		c.city,
		o.order_sum
 from cte_orders_2024 o
 join clients c
   on o.client_id  = c.id;



– VIEW

create view hr.v_emp_dep_8
as select  employee_id,
			last_name,
			salary
   from    hr.employees
   where   department_id = 8;
 
 
  select * from hr.v_emp_dep_8;
 CREATE OR REPLACE VIEW hr.v_dept_sum(
	name,
	minsal,
	maxsal,
	avgsal
)
as select   d.department_name,
			MIN(e.salary),
           MAX(e.salary),
			AVG(e.salary)
	from employees e
	join departments d
     on (e.department_id = d.department_id)
  group by d.department_name;
 
SELECT * FROM hr.v_dept_sum;
DROP MATERIALIZED view if exists hr.mtv_dept_sum;
CREATE materialized VIEW hr.mtv_dept_sum(
	name,
	minsal,
	maxsal,
	avgsal
)
as select   d.department_name,
			MIN(e.salary),
           MAX(e.salary),
			AVG(e.salary)
	from employees e
	join departments d
     on (e.department_id = d.department_id)
  group by d.department_name;
 
 select * from hr.mtv_dept_sum;
select * from hr.employees where department_id  = 1;
update hr.employees
 set salary = 9999
where employee_id = 200;

