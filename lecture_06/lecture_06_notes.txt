–Subquery in HR

select last_name, salary
from hr.employees
where  salary >
              (select salary
               from hr.employees
               where  last_name = 'Fay');
select  t1.last_name,
  t1.job_id,
  t2.job_title
from hr.employees t1
left join hr.jobs t2
on t1.job_id = t2.job_id
where  t1.job_id =
               (select job_id
                from hr.employees
                where  last_name = 'Lorentz');
               
-- потом переписать на CTE
select last_name, job_id, salary
from hr.employees
where  job_id = 
               (select job_id
                from hr.employees
                where  last_name = 'Lorentz')
AND    salary >
               (select salary
                from hr.employees
                where  last_name = 'Lorentz');
    
    
select * from hr.jobs;
select employee_id, last_name, job_id, salary
from hr.employees
where  salary < any
                   (select salary
                    from hr.employees
                    where  job_id = 6)
AND    job_id != 6;
select employee_id, last_name, job_id, salary
from hr.employees
where  salary < all
                   (select salary
                    from hr.employees
                    where  job_id = 6)
and job_id <> 6;
-- Вывести сотрудника, который является менеджером и с зарплатой более N
select  employee_id,
  salary,
  last_name
from hr.employees t1
where exists
   (select employee_id
     from hr.employees t2
    where t2.manager_id = t1.employee_id
    and t2.salary > 10000);
-- Найти такие должности, которых нет среди подчинённых сотрудников
select *
from hr.jobs
where not exists
    (select * from hr.employees
     where employees.job_id = jobs.job_id
       and employees.manager_id is not null);
--Найти всех сотрудников, кто не менеджеры
select emp.employee_id,
    emp.last_name
from hr.employees emp
where  emp.employee_id not in
                          (select mgr.manager_id
                           from hr.employees mgr);
       
       
select emp.employee_id,
    emp.last_name
from hr.employees emp
where  emp.employee_id not in
                          (select distinct coalesce(mgr.manager_id, 0)
                           from hr.employees mgr);
                          
                         
                         
select sq.*,
  j.job_title
from (
    select employee_id, last_name, job_id, salary
   from hr.employees
   where  salary < all
                       (select salary
                        from hr.employees
                        where  job_id = 6)
   and job_id <> 6
  ) sq
join hr.jobs j
  on sq.job_id = j.job_id ;
 
 select e.*,
    (select j.job_title from hr.jobs j where j.job_id = e.job_id) as job_titile
 from hr.employees e
                         

—------------------------------------------------------------------------------------------------------------------------

-- Задание 1: Найти клиентов, которые сделали заказы на такие товары, которые также заказывали клиенты из города "Kazan"
-- V1 --
select  o1.item_name,
  c1.*
from dev.orders o1
join dev.clients c1
 on o1.client_id  = c1.id
and c1.city != 'Kazan'
where o1.item_name in (select distinct o2.item_name
      from dev.orders o2
      join dev.clients c2
        on o2.client_id  = c2.id
        and c2.city = 'Kazan');
------------------------------------------------
--V2--
select  o1.*
from dev.orders o1
where o1.item_name in (select distinct o2.item_name
      from dev.orders o2
      join dev.clients c2
        on o2.client_id  = c2.id
        and c2.city = 'Kazan')
 and o1.client_id not in (select distinct o2.client_id
      from dev.orders o2
      join dev.clients c2
        on o2.client_id  = c2.id
        and c2.city = 'Kazan')
      
---------------------------------------------------
--18. Напишите запрос, возвращающий ID отдела, фамилию сотрудника и фамилии всех сотрудников, работающих в том-же отделе. Назовите колонки 'DEPARTMENT', 'EMPLOYEE' и 'COLLEAGUE'.
select  t1.department_id,
  t1.employee_id,
  t2.employee_id as "COLLEAGUE"
 from hr.employees t1
 join hr.employees t2
   on t1.department_id = t2.department_id

-- . Напишите запрос, возвращающий фамилию, ID сотрудника, фамилию менеджера и ID менеджера для каждого сотрудника (для сотрудников, у которых нет менеджера, в этих колонках должен быть NULL). Назовите колонки 'Employee', 'Emp#', 'Manager', 'Mgr#'.
select  t1.employee_id as manager_id,
  CONCAT(t1.first_name, ' ', t1.last_name) as manger_name,
  t2.employee_id as employee_id,
  CONCAT(t2.first_name, ' ', t2.last_name) as eployee_name
 from hr.employees t1
 join hr.employees t2
   on t1.employee_id = t2.manager_id

– Вывести сотрудников из двух разных департаментов
select t1.employee_id,
    CONCAT(t1.first_name, ' ', t1.last_name) as fio,
    t1.department_id,
    t2.department_name
 from hr.employees t1
 join hr.departments t2
   on t1.department_id  = t2.department_id
 where t2.department_name = 'Marketing'
union all
select t1.employee_id,
    CONCAT(t1.first_name, ' ', t1.last_name) as fio,
    t1.department_id,
    t2.department_name
 from hr.employees t1
 join hr.departments t2
   on t1.department_id  = t2.department_id
 where t2.department_name = 'Shipping'
order by department_name DESC

---------------------------------------------------------------------------------
-- CTE
---------------------------------------------------------------------------------
-- 1. Вывести список всех сотрудников, работающих в департаменте "IT", с указанием города
-- Сотрудники из департамента IT и их города
WITH it_department AS (
   SELECT department_id
   FROM hr.departments
   WHERE department_name = 'IT'
)
SELECT e.first_name,
    e.last_name,
    l.city
FROM hr.employees e
JOIN hr.departments d
 ON e.department_id = d.department_id
JOIN hr.locations l
 ON d.location_id = l.location_id
WHERE e.department_id IN (SELECT department_id FROM it_department);
----------------------------------------
--V2
WITH it_department AS (
   SELECT department_id
   FROM hr.departments
   WHERE department_name = 'IT'
)
SELECT e.first_name,
    e.last_name,
    l.city
FROM hr.employees e
JOIN hr.departments d
 ON e.department_id = d.department_id
JOIN hr.locations l
 ON d.location_id = l.location_id
JOIN it_department it_dep
 on e.department_id = it_dep.department_id


