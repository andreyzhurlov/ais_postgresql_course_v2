


---------------------------------------------------------------------------------
-- UNION и UNION ALL
---------------------------------------------------------------------------------

-- 30
select employee_id,
       job_id
from   hr.employees
union
select employee_id,
       job_id
from   hr.job_history;

-- 32
select employee_id,
       job_id,
       department_id
from   hr.employees
union all
select employee_id,
       job_id,
       department_id
from   hr.job_history
order  by employee_id;


-- 37
select location_id,
       department_name "Department",
       null            "Warehouse location"
from   hr.departments
union
select location_id,
       null "Department",
       state_province
from   hr.locations;

-- 38
select employee_id,
       job_id,
       salary
from   hr.employees
union
select employee_id,
       job_id,
       0
from   hr.job_history;

---------------------------------------------------------------------------------
-- CTE
---------------------------------------------------------------------------------

-- 1. Вывести список всех сотрудников, работающих в департаменте "IT", с указанием города
-- Сотрудники из департамента IT и их города
WITH it_department AS (
    SELECT department_id
    FROM hr.departments
    WHERE department_name = 'IT'
)
SELECT e.first_name, e.last_name, l.city
FROM hr.employees e
JOIN hr.departments d ON e.department_id = d.department_id
JOIN hr.locations l ON d.location_id = l.location_id
WHERE e.department_id IN (SELECT department_id FROM it_department);




-- 2. Вывести имена сотрудников и отметить статус по зарплате: "низкая", "средняя", "высокая"
-- Сотрудники и категории по зарплате
WITH salary_classification AS (
    SELECT
        employee_id,
        first_name,
        last_name,
        salary,
        CASE
            WHEN salary < 5000 THEN 'низкая'
            WHEN salary BETWEEN 5000 AND 10000 THEN 'средняя'
            ELSE 'высокая'
        END AS salary_status
    FROM hr.employees
)
SELECT *
FROM salary_classification;



-- 3. Найти сотрудников, которые работают в одной стране с департаментом "Marketing"
-- Сотрудники, работающие в той же стране, где департамент "Marketing"
WITH marketing_country AS (
    SELECT l.country_id
    FROM hr.departments d
    JOIN hr.locations l ON d.location_id = l.location_id
    WHERE d.department_name = 'Marketing'
)
SELECT DISTINCT e.first_name, e.last_name, l.country_id
FROM hr.employees e
JOIN hr.departments d ON e.department_id = d.department_id
JOIN hr.locations l ON d.location_id = l.location_id
WHERE l.country_id IN (SELECT country_id FROM marketing_country);



-- 4. Вывести имена сотрудников и имена их детей (из таблицы dependents)
-- Сотрудники и их дети
WITH employee_names AS (
    SELECT employee_id, first_name || ' ' || last_name AS emp_full_name
    FROM hr.employees
)
SELECT en.emp_full_name AS employee, d.first_name AS child_first_name, d.last_name AS child_last_name
FROM employee_names en
JOIN hr.dependents d ON en.employee_id = d.employee_id;


---------------------------------------------------------------------------------
-- Агрегации и группировки
---------------------------------------------------------------------------------
-- 6
select avg(salary),
      max(salary),
      min(salary),
      sum(salary)
from   employees
where  job_id = 9;
-- 7
select min(hire_date),
      max(hire_date)
from   employees;
select *
 from hr.employees e1
 where e1.hire_date = (select min(e2.hire_date)
						from   employees e2);
-- 8
select count(*)
from   employees
where  department_id = 5;
-- 13
select department_id,
      round(avg(salary),2) as round_avg_salary
from   employees
group  by department_id;
-- 14
select avg(salary)
from   employees
group  by department_id;
-- 16
select department_id,
      job_id,
      sum(salary)
from   employees
where  department_id > 4
group  by department_id,
         job_id
order  by department_id;
-- 17
select department_id,
      count(last_name)
from   employees;
select department_id as dpt,
      count(last_name)
from   employees
group  by dpt;
select department_id,
      job_id,
      count(last_name)
from   employees
group  by department_id;
-- 18
select department_id,
      avg(salary)
from   employees
where  avg(salary) > 8000
group  by department_id;
select department_id,
      avg(salary)
from   employees
group  by department_id
having  avg(salary) > 8000;
-- 21
select department_id,
      max(salary)
from   employees
group  by department_id
having max(salary) > 10000;
-- 22
select job_id,
      sum(salary) PAYROLL
from   employees
where  job_id > 5
group  by job_id
having sum(salary) > 13000
order  by payroll;
select job_id,
      sum(salary) PAYROLL
from   employees
where  job_id != 5
group  by job_id
having sum(salary) > 13000
order  by sum(salary);
-- 23
select max(avg(salary))
from   employees
group  by department_id;
with cte_avg_dep_salary as (
	select department_id,
		   avg(salary) as avg_savalry
	  from employees
	  group  by department_id	
)
select round(max(avg_savalry),2)
 from cte_avg_dep_salary;



---------------------------------------------------------------------------------
-- VIEW
---------------------------------------------------------------------------------



-- 49
create view	hr.empvu80
 as select  employee_id, last_name, salary
    from    employees
    where   department_id = 80;
	
SELECT * FROM hr.empvu80
-- 50
create view	salvu50
 as select  employee_id ID_NUMBER, last_name as name,
            salary*12 ANN_SALARY
    from    employees
    where   department_id = 50;

SELECT * FROM hr.salvu50
-- 51
select * from   salvu50;

-- 52
drop view empvu80;

create or replace view empvu80(
	id_number, 
    name, 
	sal, 
	department_id
)
as select   employee_id, 
			first_name || ' ' || last_name, 
			salary, 
			department_id
     from  employees
    where  department_id = 80;


select * from  employees where employee_id = 190;

select * from  employees where employee_id = 150;

update employees
  set salary = 10000
where employee_id = 150;

-- 53
CREATE OR REPLACE VIEW hr.dept_sum_vu(
	name, 
	minsal, 
	maxsal, 
	avgsal
)
as select   d.department_name, 
			MIN(e.salary), 
            MAX(e.salary),
			AVG(e.salary)
	from employees e 
	join departments d
      on (e.department_id = d.department_id)
   group by d.department_name;
   
 SELECT * FROM hr.dept_sum_vu





-- 6. Создайте представление, возвращающее ID сотрудника, его имя и ID отдела, в котором он работает.

/*
7. Создайте представление, получающее ID сотрудника, его имя и ID отдела для всех сотрудников отдела с ID - 50 
и позволяющее вставлять данные в таблицу employees. 
Проверьте вставку данных, написав соответствующие запросы. 
Удалите вставленные данные из таблицы.
*/



                            