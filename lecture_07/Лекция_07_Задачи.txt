
-----------------------------------------------------------------------------
-- UNION / UNION ALL
-----------------------------------------------------------------------------

/*
Задание 1: Использовать UNION
Описание:
Вывести список всех клиентов, которые:

либо из города "Moskva",

либо сделали хотя бы один заказ на товар "smartphone".

Каждого клиента показать только один раз (т.е. без повторов, используем UNION).
*/



/*
Задание 2: Использовать UNION ALL
Описание:
Составить список заказов, в котором:

сначала идут все заказы на товар laptop,

затем — все заказы на товар tablet.

Поскольку один клиент мог заказывать и то, и другое — возможны повторы (поэтому UNION ALL).
*/


-----------------------------------------------------------------------------
-- CTE
-----------------------------------------------------------------------------

/*
Задание 1. Вывести ID клиентов из заказов - если есть хотя бы один заказ с товаром smartphone или laptop - отметить их как VIP, 
остальных как "обычный" (ordinary)
Добавить информацию о клиентах (имя, фамилия, возраст и город)
*/

-- Задание 2: Вывести клиентов, которые совершали заказы в декабре 2024 года, указав их имя, фамилию, дату заказа и товар.


/*
Задание 3: Использовать UNION ALL, CTE и JOIN
Описание:
Составить список заказов, в котором:

сначала идут все заказы на товар laptop,

затем — все заказы на товар tablet.

Поскольку один клиент мог заказывать и то, и другое — допустимы повторы (поэтому применяйте UNION ALL).

Затем, финально - обогатите набор данных информацией о клиенте (имя, фамилия, возраст и город)
*/



-----------------------------------------------------------------------------
-- GROUP BY
-----------------------------------------------------------------------------

-- Задание 1: Общее количество и сумма заказов, среднее значение заказа, минимальная и максимальная дата заказа
-- без группировок


-- Задание 2: Общее количество и сумма заказов, среднее значение заказа, минимальная и максимальная дата заказа
-- в Группировке по названию товара
-- Сортировка по сумме заказов (по Убыванию) + по количеству (По Возрастанию)


-- Задание 3: По каждому клиенту: Общее количество и сумма заказов, минимальная и максимальная дата заказа
-- + Доп.информация с Фамилией и Именем клиента, а так же название города
-- + Сортировка по Убыванию относительно суммы заказа


-- Задание 4: Общее количество и сумма заказов по каждому городу 
-- в Порядке убывания по сумме заказов


-- Задание 5: Общее количество, сумма заказов и среднее значение заказа, по возрастным группам
-- в Порядке убывания по сумме заказов



-----------------------------------------------------------------------------
-- GROUP BY + HAVING
-----------------------------------------------------------------------------


-- Задание 1: Найти клиентов, которые сделали более 5 заказов, и вывести их фамилию, имя, город и количество заказов.
-- + Сортировка по убыванию количества заказов


-- Задание 2: Найти клиентов, у которых общая сумма заказов превышает 10000, и вывести их имя, фамилию, email и сумму заказов.
-- + Сортировка по убыванию суммы заказа



-----------------------------------------------------------------------------
-- GROUP BY + HAVING + CTE
-----------------------------------------------------------------------------


-- Задание 1: Найти клиентов, которые за 2024 год сделали заказы на сумму более 10,000. 
-- Вывести имя, фамилию, город и сумму заказов.


-- Задание 2: Найти города, в которых более 3 клиентов, рождённых после 1990 года, совершали заказы. 
-- Вывести название города и количество таких клиентов.



-----------------------------------------------------------------------------
-- Представления VIEW
-----------------------------------------------------------------------------
/*
Задача 1: Представление с заказами клиентов

Создайте представление dev.latest_orders_view, которое содержит клиентов и их заказы, сделанные в 2024 году. 
Включите следующие поля: client_id, first_name, last_name, order_id, order_date, item_name, order_ammount.
Сортировка: по Дате заказа (По Возрастанию) и ещё по Сумме Заказа (По Убыванию)
*/


/*
Задача 2: Представление с классификацией клиентов по городам

Создайте представление dev.city_client_type_view, которое для каждого клиента указывает его город и статус:

'stolica' — если город клиента — 'Moskva'

'regional' — для всех остальных городов.

Поля: client_id, first_name, last_name, city, city_type.
*/



-- Задача 3: Пересоздайте представление из Задания 1 на Материализованное представление
-- Выбираются ли теперь данные чуть быстрее
